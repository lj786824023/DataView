DELIMITER |

CREATE DEFINER="cq_sjpt"@"%" PROCEDURE "pr_f3_ljz"(
	OUT	OUT_RES_MSG		VARCHAR(200),
	IN	IN_TX_DATE		VARCHAR(8),
	IN	IN_SCHEMA_NAME	VARCHAR(30),
	IN	IN_TABLE_NAME	VARCHAR(60),
	IN	IN_ENV			VARCHAR(10)
)
lable:BEGIN
/**********************************
算法：	拉链算法F3
说明：	LP				2021-02-28新建
		DPL				2021-04-20增加日志
		LJZ				2021-05-19合并增全量算法
		LIP				2021-05-26增加Src_Main_Task
		LIP				2021-08-11增加Src_Main_Task/Data_Src_Cd判断操作
		
入参：	IN_TX_DATE			批次日期
		IN_SCHEMA_NAME		库名称
		IN_TABLE_NAME		表英文名称
		IN_ENV				环境名称(dev-开发环境、prd-生产环境)
		
返回值：OUT_RES_MSG
-- 0	成功
-- 12	失败

**********************************/
	DECLARE ERR_CODE					VARCHAR(2000);
	DECLARE ERR_MSG						VARCHAR(2000);
		
	DECLARE ETL_PRI_KEY					VARCHAR(100) 		DEFAULT '';
	DECLARE ETL_PRI_KEY_CMP				VARCHAR(200)		DEFAULT '';
	DECLARE ETL_TABLE_CHN_NAME			VARCHAR(100)		DEFAULT '';
	DECLARE ETL_TX_DATE					VARCHAR(8)			DEFAULT IN_TX_DATE;
	DECLARE ETL_SCHEMA_NAME				VARCHAR(30)			DEFAULT IN_SCHEMA_NAME;
	DECLARE ETL_SDM_DESIGN				VARCHAR(60)			DEFAULT 'MAIN_SRC_TASK';
			
	DECLARE ETL_SEQ_NUM					INTEGER				DEFAULT 0;
	DECLARE ETL_T_TAB_ENG_NAME			VARCHAR(60)			DEFAULT IN_TABLE_NAME;
	DECLARE ETL_T_TAB_ENG_NAME_VT		VARCHAR(60);
	DECLARE ETL_T_TAB_ENG_NAME_OD		VARCHAR(60);
	DECLARE ETL_T_TAB_ENG_NAME_WT_I		VARCHAR(60);
	DECLARE ETL_T_TAB_ENG_NAME_WT_U		VARCHAR(60);
	DECLARE ETL_T_COL_ENG_NAME			VARCHAR(60);
	DECLARE ETL_T_COL_DATATYPE			VARCHAR(100);
	DECLARE ETL_T_TAB_TYPE				VARCHAR(10);
	DECLARE ETL_S_GROUP_ID_COUNT		INTEGER				DEFAULT 1;
	DECLARE ETL_S_GROUP_ID_CURRENT		INTEGER				DEFAULT 1;
	DECLARE ETL_DATA_GROUP_COUNT		INTEGER				DEFAULT 1;
	DECLARE ETL_DATA_GROUP_CURRENT		VARCHAR(80)			DEFAULT '';
	DECLARE ETL_DATA_GROUP_CURR_NUM		INTEGER				DEFAULT 201;
	DECLARE ETL_S_TAB_ENG_NAME			VARCHAR(60);
	DECLARE ETL_S_COL_ENG_NAME			VARCHAR(60);
	DECLARE ETL_S_COL_DATATYPE			VARCHAR(100);
	DECLARE ETL_S_TAB_PK				VARCHAR(200);
	DECLARE ETL_R_TRANS_EXP				TEXT				DEFAULT '';
	DECLARE ETL_R_IS_JOIN				VARCHAR(20);
	DECLARE ETL_R_JOIN_SQL				TEXT				DEFAULT '';
	DECLARE ETL_R_WHERE_CONDITION		TEXT				DEFAULT '';
	DECLARE ETL_R_EXEC_VT    			TEXT			 	DEFAULT '';
	DECLARE ETL_OD_Q_COND				VARCHAR(200)		DEFAULT '';
	
	DECLARE ETL_CUR_TIMESTAMP			VARCHAR(19);
	DECLARE ETL_ALL_COLS				VARCHAR(10000);
	DECLARE ETL_ALL_COLS_DIFF			VARCHAR(10000)		DEFAULT '';
	DECLARE ETL_ALL_COLS_DIFFF			VARCHAR(10000)		DEFAULT '';
	DECLARE ETL_ALL_COLS_DIFF_A			VARCHAR(10000)		DEFAULT '';
	DECLARE ETL_ROW_NUM					INTEGER				DEFAULT 0;
	DECLARE ETL_RESET_RUN				INTEGER 			DEFAULT 0;
	DECLARE ETL_IN_ENV					VARCHAR(10) 		DEFAULT IN_ENV;
	DECLARE ETL_LIFECYCLE				VARCHAR(10)			DEFAULT 'D90';	
	DECLARE ETL_HIST_LOG_MAX_DATE		VARCHAR(10)			DEFAULT ETL_TX_DATE;
	DECLARE ETL_TEMPORARY				VARCHAR(20)			DEFAULT 'TEMPORARY';
	-- DECLARE ETL_TEMPORARY				VARCHAR(20)			DEFAULT '';
	DECLARE ETL_RUNNING_STEP_COUNT		INTEGER 			DEFAULT 0;
	DECLARE	ETL_ACTIVE_COUNT			BIGINT				DEFAULT 0;
	
	DECLARE	ETL_USER_ID					VARCHAR(30)			DEFAULT SESSION_USER();
	DECLARE	ETL_STEP_NO					INTEGER				DEFAULT 0;

			
	/*Exception hANDling 异常处理*/
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET DIAGNOSTICS condition 1 ERR_CODE = returned_sqlstate, ERR_MSG = message_text;
		SELECT COUNT(*) INTO ETL_RUNNING_STEP_COUNT 
		FROM ETL.etl_job_status 
		WHERE table_name = ETL_T_TAB_ENG_NAME 
		AND tx_date = ETL_TX_DATE 
		AND step_status = 'Running';
		
		IF ETL_RUNNING_STEP_COUNT = 0 THEN
			SELECT CURRENT_TIMESTAMP INTO ETL_CUR_TIMESTAMP;
			INSERT INTO ETL.ETL_JOB_STATUS_EDW VALUES ('',ETL_USER_ID,ETL_T_TAB_ENG_NAME,ETL_TX_DATE,0,ERR_CODE,0,'Failed',ERR_CODE||':'||ERR_MSG,ETL_CUR_TIMESTAMP,ETL_CUR_TIMESTAMP);
			SET OUT_RES_MSG = '12';

		ELSE 
			UPDATE ETL.ETL_JOB_STATUS_EDW
			SET STEP_STATUS = 'Failed'
			,STEP_ERR_LOG = ERR_CODE||':'||ERR_MSG
			,LAST_END_TIME = CURRENT_TIMESTAMP
			WHERE SQL_UNIT = ETL_T_TAB_ENG_NAME 
			AND TX_DATE = ETL_TX_DATE 
			AND STEP_STATUS = 'Running'
			AND USER_ID = ETL_USER_ID
			AND SQL_UNIT = ETL_T_TAB_ENG_NAME;
		END IF;
	END;
	
	SET ETL_T_TAB_ENG_NAME_VT 	= CONCAT('VT_',ETL_T_TAB_ENG_NAME);
	SET ETL_T_TAB_ENG_NAME_OD 	= CONCAT('OD_',ETL_T_TAB_ENG_NAME);
	SET ETL_T_TAB_ENG_NAME_WT_I = CONCAT('WT_I_',ETL_T_TAB_ENG_NAME);
	SET ETL_T_TAB_ENG_NAME_WT_U = CONCAT('WT_U_',ETL_T_TAB_ENG_NAME);

	DELETE FROM ETL.ETL_JOB_STATUS_EDW 
	WHERE SQL_UNIT = ETL_T_TAB_ENG_NAME
	AND TX_DATE = ETL_TX_DATE 
	AND USER_ID = ETL_USER_ID;
	
	-- ---------------------------- 7张主表特殊处理，如果以后有新增类似表，需要在此添加 -----------------
IF LOWER(ETL_T_TAB_ENG_NAME) IN ('t03_agmt_bal_h',  't03_agmt_dt_h',  't03_agmt_grade_h',  't03_agmt_int_h',  't03_agmt_rate_h',  't03_agmt_rel_h', 't03_agmt_stat_h')
		THEN 
		-- 1、 t03_agmt_bal_h
		IF LOWER(ETL_T_TAB_ENG_NAME) ='t03_agmt_bal_h'
			THEN 
		-- 先清空主表数据再插入所有的子表数据
			SET @TRUNCATE_DATA =  CONCAT('TRUNCATE TABLE ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME );
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000001,@TRUNCATE_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_bal_ccs_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000002,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_bal_fds_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000003,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_bal_ncm_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000004,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_bal_ncs_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000005,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_bal_nfin_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000006,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_bal_opi_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000007,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_bal_rmps_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000008,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_bal_sl_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000009,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
		
		END IF;
		
		-- 2、t03_agmt_dt_h
		IF LOWER(ETL_T_TAB_ENG_NAME) ='t03_agmt_dt_h'
			THEN
			-- 先清空主表数据再插入所有的子表数据
			SET @TRUNCATE_DATA =  CONCAT('TRUNCATE TABLE ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME );
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000001,@TRUNCATE_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_dt_ccs_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000002,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_dt_fds_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000003,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_dt_ncm_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000004,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_dt_ncs_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000005,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_dt_nfin_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000006,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_dt_opi_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000007,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_dt_rmps_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000008,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_dt_sl_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000009,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
		END IF;
		
		-- 3、t03_agmt_grade_h
		IF LOWER(ETL_T_TAB_ENG_NAME) ='t03_agmt_grade_h'
			THEN
			-- 先清空主表数据再插入所有的子表数据
			SET @TRUNCATE_DATA =  CONCAT('TRUNCATE TABLE ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME );
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000001,@TRUNCATE_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_grade_ncm_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000002,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_grade_rmps_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000003,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
		END IF;
		
		-- 4、t03_agmt_int_h
		IF LOWER(ETL_T_TAB_ENG_NAME) ='t03_agmt_int_h'
			THEN
			-- 先清空主表数据再插入所有的子表数据
			SET @TRUNCATE_DATA =  CONCAT('TRUNCATE TABLE ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME );
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000001,@TRUNCATE_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_int_fds_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000002,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_int_ncm_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000003,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_int_ncs_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000004,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_int_nfin_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000005,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_int_opi_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000006,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_int_rmps_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000007,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
		END IF;
		
		-- 5、t03_agmt_rate_h
		IF LOWER(ETL_T_TAB_ENG_NAME) ='t03_agmt_rate_h'
			THEN
			-- 先清空主表数据再插入所有的子表数据
			SET @TRUNCATE_DATA =  CONCAT('TRUNCATE TABLE ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME );
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000001,@TRUNCATE_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_rate_fds_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000002,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_rate_ncm_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000003,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_rate_ncs_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000004,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_rate_nfin_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000005,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_rate_opi_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000006,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_rate_rmps_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000007,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
		END IF;
		
		-- 6、t03_agmt_rel_h
		IF LOWER(ETL_T_TAB_ENG_NAME) ='t03_agmt_rel_h'
			THEN
			-- 先清空主表数据再插入所有的子表数据
			SET @TRUNCATE_DATA =  CONCAT('TRUNCATE TABLE ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME );
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000001,@TRUNCATE_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;

			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_rel_cfs_h');  
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000002,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_rel_ncm_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000003,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_rel_ncs_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000004,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_rel_rmps_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000005,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_rel_sl_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000006,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
		END IF;
		
		-- 7、t03_agmt_stat_h
		IF LOWER(ETL_T_TAB_ENG_NAME) ='t03_agmt_stat_h'
			THEN
			-- 先清空主表数据再插入所有的子表数据
			SET @TRUNCATE_DATA =  CONCAT('TRUNCATE TABLE ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME );
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000001,@TRUNCATE_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_stat_ccs_h');  
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000002,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_stat_ncm_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000003,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_stat_ncs_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000004,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_stat_rmps_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000005,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
			SET @INSERT_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,' SELECT * FROM ',ETL_SCHEMA_NAME,'.t03_agmt_stat_sl_h');
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000006,@INSERT_DATA,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
			
		END IF;
		
ELSE
-- 不在以上表汇总的走普通拉链表流程	
	
	/* 入参判断：日期判断 正负7天 */
	SELECT MAX(DATA_DATE) 
	FROM ETL.ETL_HIST_LOG 
	WHERE lower(OWNER) = lower(ETL_SCHEMA_NAME) 
	AND TABLE_NAME = ETL_T_TAB_ENG_NAME INTO ETL_HIST_LOG_MAX_DATE;

	SELECT COALESCE(ETL_HIST_LOG_MAX_DATE,ETL_TX_DATE) INTO ETL_HIST_LOG_MAX_DATE;
	
	IF ABS(DATEDIFF(ETL_TX_DATE,ETL_HIST_LOG_MAX_DATE)) > 7
	THEN
		SELECT CURRENT_TIMESTAMP INTO ETL_CUR_TIMESTAMP;
		INSERT INTO ETL.ETL_JOB_STATUS_EDW VALUES ('',ETL_USER_ID,ETL_T_TAB_ENG_NAME,ETL_TX_DATE,1000001,'',0,'Failed','上一批次最大日期:'||ETL_HIST_LOG_MAX_DATE,ETL_CUR_TIMESTAMP,ETL_CUR_TIMESTAMP);
		
		SET OUT_RES_MSG = '12';
		LEAVE LABLE;
	END IF;  
	
	/*重跑，清除 当天或者晚于当天的数据 根据日志表控制*/
	SELECT COUNT(1) FROM ETL.ETL_HIST_LOG 
	WHERE lower(OWNER) = lower(ETL_SCHEMA_NAME) 
	AND TABLE_NAME = ETL_T_TAB_ENG_NAME
    AND DATA_DATE >= ETL_TX_DATE INTO ETL_RESET_RUN;
	
	SELECT 
	CAST(GROUP_CONCAT(T_COL_ENG_NAME ORDER BY SEQ_NUM ASC SEPARATOR ',\n') AS CHAR) INTO ETL_ALL_COLS_DIFFF
	FROM etl.datamapping
	WHERE UPPER(T_TAB_ENG_NAME) = UPPER(IN_TABLE_NAME)
	AND S_GROUP_ID = 1
	AND UPPER(T_COL_ENG_NAME)<>'END_DT';

    SELECT -- 不带日期技术字段
	CAST(GROUP_CONCAT(T_COL_ENG_NAME ORDER BY SEQ_NUM ASC SEPARATOR ',\n') AS CHAR) INTO @ETL_ALL_COLS_NOTDT
	FROM etl.datamapping
	WHERE UPPER(T_TAB_ENG_NAME) = UPPER(IN_TABLE_NAME)
	AND S_GROUP_ID = 1
	AND UPPER(T_COL_ENG_NAME) NOT IN ('START_DT','END_DT');	
	
	/*如果有历史记录则执行重跑过程*/
 	IF ETL_RESET_RUN > 0 THEN
		SET @DELETE_OD_DATA =  CONCAT('DELETE FROM ',ETL_SCHEMA_NAME,'.', ETL_T_TAB_ENG_NAME ,'\nWHERE Start_Dt >= ${TX_DATE}');
		CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000002,@DELETE_OD_DATA,ETL_TX_DATE);
		IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
		/*
		SET @IST_OD_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME, '.', ETL_T_TAB_ENG_NAME ,'\nSELECT ',ETL_ALL_COLS_DIFFF,'\n,${MAX_DATE}\nFROM ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME,'\nWHERE End_Dt >= ${LAST_TX_DATE} AND End_Dt < ${MAX_DATE}');		
		CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000003,@IST_OD_DATA,ETL_TX_DATE);
		IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
		*/
		SET @IST_OD_DATA =  CONCAT('INSERT INTO ',ETL_SCHEMA_NAME, '.', ETL_T_TAB_ENG_NAME ,'\n(\n',@ETL_ALL_COLS_NOTDT,',\nstart_dt,\nend_dt)'
		,'\nSELECT ',@ETL_ALL_COLS_NOTDT,',\nstart_dt,\n${MAX_DATE}\nFROM ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME,'\nWHERE End_Dt >= ${LAST_TX_DATE} AND End_Dt < ${MAX_DATE}');		
		CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000003,@IST_OD_DATA,ETL_TX_DATE);
		IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
		
		SET @IST_OD_DATA =  CONCAT('DELETE FROM ',ETL_SCHEMA_NAME, '.', ETL_T_TAB_ENG_NAME ,'\nWHERE End_Dt >= ${LAST_TX_DATE} AND End_Dt < ${MAX_DATE}');
		CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000004,@IST_OD_DATA,ETL_TX_DATE);
		IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
		
 	END IF;
	
	/*etl_hist_log记录运行日志*/
	CALL ETL.PR_LOG_HIST(ETL_SCHEMA_NAME, ETL_T_TAB_ENG_NAME, ETL_TX_DATE, OUT_RES_MSG);

	-- DATAMAPPING_TASK获取生命周期
	SELECT
	UPPER(SAVE_CYCLE) INTO ETL_LIFECYCLE
	FROM ETL.DATAMAPPING_TASK
	WHERE UPPER(T_TAB_ENG_NAME) = UPPER(IN_TABLE_NAME)
	AND ETL_ALGORITHM = 'F3'
	AND ENABLE = '1'
	LIMIT 1;

	-- 判断生命周期参数合法性
	IF REGEXP_LIKE(ETL_LIFECYCLE,'^D\\d+') = 0 THEN
		SELECT CURRENT_TIMESTAMP INTO ETL_CUR_TIMESTAMP;
		INSERT INTO ETL.ETL_JOB_STATUS_EDW VALUES ('',ETL_USER_ID,ETL_T_TAB_ENG_NAME,ETL_TX_DATE,1000005,'',0,'Failed','生命周期参数不合法',ETL_CUR_TIMESTAMP,ETL_CUR_TIMESTAMP);	
		
		SET OUT_RES_MSG = '12';
		LEAVE LABLE;
	END IF;

	-- DATAMAPPING_TASK获取主键
	SELECT
	UPPER(PHYSICAL_PRI_KEY) INTO ETL_PRI_KEY
	FROM ETL.DATAMAPPING_TASK
	WHERE UPPER(T_TAB_ENG_NAME) = UPPER(IN_TABLE_NAME)
	AND ETL_ALGORITHM = 'F3'
	AND ENABLE = '1'
	LIMIT 1;
	
	-- DATAMAPPING_TASK
	SELECT
	CASE
		WHEN UPPER(SDM_DESIGN) = ETL_SDM_DESIGN
		THEN ETL_SDM_DESIGN
		ELSE 'DATA_SRC_CD'
	END INTO ETL_SDM_DESIGN
	FROM ETL.DATAMAPPING_TASK
	WHERE UPPER(T_TAB_ENG_NAME) = UPPER(IN_TABLE_NAME)
	AND ETL_ALGORITHM = 'F3'
	AND ENABLE = '1'
	LIMIT 1;

	-- 主键判断
	IF ETL_PRI_KEY = '' THEN
		SELECT CURRENT_TIMESTAMP INTO ETL_CUR_TIMESTAMP;
		INSERT INTO ETL.ETL_JOB_STATUS_EDW VALUES ('',ETL_USER_ID,ETL_T_TAB_ENG_NAME,ETL_TX_DATE,1000006,'',0,'Failed','未获取主键信息',ETL_CUR_TIMESTAMP,ETL_CUR_TIMESTAMP);	
		
		SET OUT_RES_MSG = '12';
		LEAVE LABLE;
	END IF;
	
	-- 主键JOIN
	SELECT 
	GROUP_CONCAT(CONCAT('A.',UPPER(IDS),' = ','B.',UPPER(IDS)) SEPARATOR ' \nAND ') INTO ETL_PRI_KEY_CMP
	FROM (
		SELECT
		T1.T_TAB_ENG_NAME,
		TRIM(SUBSTRING_INDEX(SUBSTRING_INDEX(T1.PHYSICAL_PRI_KEY, ',', G.ID), ',', -1)) IDS
		FROM (
			SELECT
			T_TAB_ENG_NAME,PHYSICAL_PRI_KEY 
			FROM ETL.DATAMAPPING_TASK
			WHERE UPPER(T_TAB_ENG_NAME) = UPPER(IN_TABLE_NAME)
		) T1
		JOIN ETL.ETL_PUBLIC_SEQ G 
		ON G.ID <= (LENGTH(T1.PHYSICAL_PRI_KEY) - LENGTH(REPLACE(T1.PHYSICAL_PRI_KEY, ',', '')) + 1)
	) P1 ;
	
	-- 字段比对列表
	SELECT 
	CAST(GROUP_CONCAT(T_COL_ENG_NAME ORDER BY SEQ_NUM ASC SEPARATOR ',\n') AS CHAR(8000)) INTO ETL_ALL_COLS_DIFF
	FROM ETL.DATAMAPPING
	WHERE UPPER(T_TAB_ENG_NAME) = UPPER(IN_TABLE_NAME)
	AND S_GROUP_ID = 1
	AND UPPER(T_COL_ENG_NAME) NOT IN ('START_DT','END_DT');
	
	-- 字段比对列表+A
	SELECT 
	GROUP_CONCAT(CONCAT('A.',UPPER(T_COL_ENG_NAME)) ORDER BY SEQ_NUM ASC SEPARATOR ',\n')  INTO ETL_ALL_COLS_DIFF_A
	FROM ETL.DATAMAPPING
	WHERE UPPER(T_TAB_ENG_NAME) = UPPER(IN_TABLE_NAME)
	AND S_GROUP_ID = 1
	AND UPPER(T_COL_ENG_NAME) NOT IN ('START_DT','END_DT');
		
	/*删除临时表*/
	IF UPPER(ETL_IN_ENV) = 'DEV' THEN 
		SET ETL_TEMPORARY = '';
	END IF;
	
	SET @DROP_VT_SQL = CONCAT('DROP ',ETL_TEMPORARY,' TABLE IF EXISTS ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_VT);
	CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000007,@DROP_VT_SQL,ETL_TX_DATE);
	IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
	
	SET @DROP_OD_SQL = CONCAT('DROP ',ETL_TEMPORARY,' TABLE IF EXISTS ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_OD);
	CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000008,@DROP_OD_SQL,ETL_TX_DATE);
	IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
	
	SET @DROP_WT_I_SQL = CONCAT('DROP ',ETL_TEMPORARY,' TABLE IF EXISTS ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_WT_I);
	CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000009,@DROP_WT_I_SQL,ETL_TX_DATE);
	IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;

	SET @DROP_WT_U_SQL = CONCAT('DROP ',ETL_TEMPORARY,' TABLE IF EXISTS ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_WT_U);
	CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000010,@DROP_WT_U_SQL,ETL_TX_DATE);
	IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;

	/*创建临时表*/
	select group_concat(col_eng_name||' '||col_type_desc order by col_seq separator ',\n') into @tab_desc from etl.etl_pddl where tab_eng_name=ETL_T_TAB_ENG_NAME;
	select replace(logical_pri_key,',',''',''') into @tab_key from etl.datamapping_task where t_tab_eng_name=ETL_T_TAB_ENG_NAME;
	set @tab_set=')COMPRESS(5, 5) DISTRIBUTED BY('''||@tab_key||''') DEFAULT CHARSET=utf8';

	SET @CREATE_VT_SQL = CONCAT('CREATE ',ETL_TEMPORARY,' TABLE ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_VT,'(\n',@tab_desc,@tab_set);
	CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000011,@CREATE_VT_SQL,ETL_TX_DATE);
	IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
		
	SET @CREATE_OD_SQL = CONCAT('CREATE ',ETL_TEMPORARY,' TABLE ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_OD,'(\n',@tab_desc,@tab_set);
	CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000012,@CREATE_OD_SQL,ETL_TX_DATE);
	IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
	
	SET @CREATE_WT_I_SQL = CONCAT('CREATE ',ETL_TEMPORARY,' TABLE ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_WT_I,'(\n',@tab_desc,@tab_set);
	CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000013,@CREATE_WT_I_SQL,ETL_TX_DATE);
	IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;

	SET @CREATE_WT_U_SQL = CONCAT('CREATE ',ETL_TEMPORARY,' TABLE ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_WT_U,'(\n',@tab_desc,@tab_set);
	CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,1000014,@CREATE_WT_U_SQL,ETL_TX_DATE);
	IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
	
	
	DROP TABLE IF EXISTS VT_DATA_GROUP;
	CREATE TEMPORARY TABLE VT_DATA_GROUP
	(
		GROUP_MEMBER VARCHAR(80)
	);
	
	INSERT INTO VT_DATA_GROUP
	SELECT R_TRANS_EXP FROM ETL.DATAMAPPING
	WHERE UPPER(T_COL_ENG_NAME) = UPPER(ETL_SDM_DESIGN)
	AND UPPER(T_TAB_ENG_NAME) = UPPER(IN_TABLE_NAME)
	AND E_PRIORITY = 1
	GROUP BY 1;
		
	SELECT COUNT(*) INTO ETL_DATA_GROUP_COUNT FROM VT_DATA_GROUP;
	
	WHILE ETL_DATA_GROUP_COUNT <> 0 DO 
	
		SELECT GROUP_MEMBER INTO ETL_DATA_GROUP_CURRENT FROM VT_DATA_GROUP ORDER BY 1 LIMIT 1;
	
		DROP TABLE IF EXISTS VT_GROUP;
		CREATE TEMPORARY TABLE VT_GROUP
		(
			S_GROUP_ID INT
		);
		
		INSERT INTO VT_GROUP
		SELECT S_GROUP_ID FROM ETL.DATAMAPPING
		WHERE UPPER(T_TAB_ENG_NAME) = UPPER(IN_TABLE_NAME) 
		AND E_PRIORITY = 1
		AND UPPER(T_COL_ENG_NAME) = UPPER(ETL_SDM_DESIGN)
		AND R_TRANS_EXP = ETL_DATA_GROUP_CURRENT;
		
		SELECT COUNT(*) INTO ETL_S_GROUP_ID_COUNT FROM VT_GROUP;

		WHILE ETL_S_GROUP_ID_COUNT <> 0 DO 

			SELECT MIN(S_GROUP_ID) INTO ETL_S_GROUP_ID_CURRENT FROM VT_GROUP;
			/*
			SELECT 
			SUBSTR(CAST(GROUP_CONCAT(CONCAT(',',R_TRANS_EXP,' AS ',T_COL_ENG_NAME,'    -- ',CONVERT(T_COL_CHN_NAME USING UTF8)) ORDER BY SEQ_NUM ASC  separator '\n')  AS CHAR),2) into ETL_R_TRANS_EXP
			FROM ETL.DATAMAPPING 
			WHERE UPPER(T_TAB_ENG_NAME) = UPPER(IN_TABLE_NAME)
			AND S_GROUP_ID = ETL_S_GROUP_ID_CURRENT;	
			*/
			
			
			SELECT 
			SUBSTR(CAST(GROUP_CONCAT(CONCAT(',',R_TRANS_EXP,' AS ',T_COL_ENG_NAME
			,CASE
				WHEN REGEXP_LIKE(R_TRANS_EXP,'\n') = 0 
				THEN CASE
					WHEN SEQ_NUM = MIN_SEQ_NUM THEN REPEAT(' ',LINE_LEN + 11 - LENGTH(R_TRANS_EXP||T_COL_ENG_NAME))
					ELSE REPEAT(' ',LINE_LEN + 10 - LENGTH(R_TRANS_EXP||T_COL_ENG_NAME))
					END
				WHEN REGEXP_LIKE(R_TRANS_EXP,'\n') = 1 
				THEN REPEAT(' ',LINE_LEN + 11 - LENGTH(SUBSTRING_INDEX(R_TRANS_EXP,'\n',-1)||T_COL_ENG_NAME))
				ELSE ' '
			END	
			,CASE
				WHEN UPPER(T_COL_ENG_NAME) IN ('DATA_DT','START_DT','END_DT','TX_DT','STATT_DT') THEN ''
				ELSE '-- '||CONVERT(T_COL_CHN_NAME USING UTF8)
			END
			) ORDER BY SEQ_NUM ASC  SEPARATOR '\n')  AS CHAR),2) 
			INTO ETL_R_TRANS_EXP
			FROM (
				SELECT
				R_TRANS_EXP
				,T_COL_ENG_NAME
				,T_COL_CHN_NAME
				,SEQ_NUM
				,MIN_SEQ_NUM
				,MAX(LINE_LEN) OVER() AS LINE_LEN
				FROM (
					SELECT 
					R_TRANS_EXP
					,T_COL_ENG_NAME
					,T_COL_CHN_NAME
					,SEQ_NUM
					,MIN(SEQ_NUM) OVER() AS MIN_SEQ_NUM
					,CASE 
						WHEN REGEXP_LIKE(R_TRANS_EXP,'\n') = 0 
						THEN (LENGTH(R_TRANS_EXP||T_COL_ENG_NAME)) 
						WHEN REGEXP_LIKE(R_TRANS_EXP,'\n') = 1
						THEN (LENGTH(SUBSTRING_INDEX(R_TRANS_EXP,'\n',-1)||T_COL_ENG_NAME))
						ELSE -1
					END AS LINE_LEN
					FROM ETL.DATAMAPPING 
					WHERE UPPER(T_TAB_ENG_NAME) = UPPER(IN_TABLE_NAME)
					AND S_GROUP_ID = ETL_S_GROUP_ID_CURRENT
					GROUP BY 1,2,3,4
				) M1 
			) M2;
			
			/*获取主表A*/
			SELECT S_TAB_ENG_NAME INTO ETL_S_TAB_ENG_NAME
			FROM etl.datamapping
			WHERE UPPER(T_TAB_ENG_NAME) = UPPER(IN_TABLE_NAME)
			AND S_GROUP_ID = ETL_S_GROUP_ID_CURRENT
			ORDER BY SEQ_NUM 
			LIMIT 1;

			/*合并JOIN规则*/
			SELECT
			CAST(GROUP_CONCAT(CONCAT(R_JOIN_TYPE,' ',R_JOIN_MARKET_TABNAME,'\n',R_JOIN_CONDITION) ORDER BY SEQ_NUM ASC SEPARATOR '\n') AS CHAR) INTO ETL_R_JOIN_SQL
			FROM ETL.DATAMAPPING
			WHERE UPPER(R_IS_JOIN) = 'Y'
			AND UPPER(T_TAB_ENG_NAME) = UPPER(IN_TABLE_NAME)
			AND S_GROUP_ID = ETL_S_GROUP_ID_CURRENT;

			/*合并WHERE规则*/
			SELECT
			CAST(GROUP_CONCAT(R_WHERE_CONDITION ORDER BY SEQ_NUM ASC SEPARATOR '\n') AS CHAR) INTO ETL_R_WHERE_CONDITION
			FROM ETL.DATAMAPPING
			WHERE TRIM(R_WHERE_CONDITION) <> ''
			AND UPPER(T_TAB_ENG_NAME) = UPPER(IN_TABLE_NAME)
			AND S_GROUP_ID = ETL_S_GROUP_ID_CURRENT;
				
			SELECT
			CASE 
				WHEN COALESCE(ETL_R_JOIN_SQL,'') = '' THEN ''
				ELSE CONCAT(ETL_R_JOIN_SQL,' \n')
			END INTO ETL_R_JOIN_SQL;
			
			SELECT
			CASE 
				WHEN COALESCE(ETL_R_WHERE_CONDITION,'') = '' THEN ''
				ELSE CONCAT('WHERE ',ETL_R_WHERE_CONDITION)
			END INTO ETL_R_WHERE_CONDITION;
				
			/*合并SQL插入VT*/
			SET @EXEC_VT_SQL = CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_VT,' \n','SELECT ',' \n',ETL_R_TRANS_EXP,
			'\nFROM ',COALESCE(ETL_S_TAB_ENG_NAME,''),' A \n',ETL_R_JOIN_SQL,ETL_R_WHERE_CONDITION,' \n');
			
			SET ETL_STEP_NO = CAST(CONCAT(ETL_DATA_GROUP_CURR_NUM,RIGHT(CONCAT('000',ETL_S_GROUP_ID_CURRENT),3),0) AS INT);
			CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,ETL_STEP_NO,@EXEC_VT_SQL,ETL_TX_DATE);
			IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
						
			/*其他对VT表的处理逻辑--自定义SQL*/
			SELECT 
			CAST(GROUP_CONCAT(COALESCE(R_EXEC_VT,'') ORDER BY SEQ_NUM ASC SEPARATOR '\n') AS CHAR) INTO ETL_R_EXEC_VT
			FROM ETL.DATAMAPPING 
			WHERE UPPER(T_TAB_ENG_NAME) = UPPER(IN_TABLE_NAME)
			AND S_GROUP_ID = ETL_S_GROUP_ID_CURRENT
			AND COALESCE(R_EXEC_VT,'') <> '';

			SELECT COALESCE(ETL_R_EXEC_VT,'')  INTO ETL_R_EXEC_VT;
			IF ETL_R_EXEC_VT != '' THEN 
				SET @EXEC_PRE_SQL = CONCAT(ETL_R_EXEC_VT,'');
				SET ETL_STEP_NO = CAST(CONCAT(ETL_DATA_GROUP_CURR_NUM,RIGHT(CONCAT('000',ETL_S_GROUP_ID_CURRENT),3),1) AS INT);
				CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,ETL_STEP_NO,@EXEC_PRE_SQL,ETL_TX_DATE);
				IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;	
			END IF;

			/*进入下一组*/
			DELETE FROM VT_GROUP WHERE S_GROUP_ID IN (SELECT MIN(S_GROUP_ID) FROM VT_GROUP);
			SELECT COUNT(*) INTO ETL_S_GROUP_ID_COUNT FROM VT_GROUP;
			/*进入下一组*/
		END WHILE;

		DROP TABLE IF EXISTS VT_GROUP;
		
		/*合并SQL插入OD*/
	    
		/*获取增全量类型*/
		SELECT COUNT(1) INTO ETL_T_TAB_TYPE FROM ETL.ETL_SRC_INTER_CTL WHERE UPPER(EDW_FORM_EN_NM)=SUBSTRING_INDEX(UPPER(ETL_S_TAB_ENG_NAME),'.','-1'); 
		IF ETL_T_TAB_TYPE='0' THEN
			SET ETL_T_TAB_TYPE='n';
		else
			SELECT NVL(SRC_SYS_INC_QTY_IND,'q') INTO ETL_T_TAB_TYPE FROM ETL.ETL_SRC_INTER_CTL WHERE UPPER(EDW_FORM_EN_NM)=SUBSTRING_INDEX(UPPER(ETL_S_TAB_ENG_NAME),'.','-1'); 
		END IF;
		IF ETL_SDM_DESIGN = 'MAIN_SRC_TASK' THEN 
			SELECT 'AND A.Main_Src_Task = '''||SUBSTRING_INDEX(UPPER(ETL_S_TAB_ENG_NAME),'.','-1')||'''' INTO ETL_OD_Q_COND;
		ELSE 
			SELECT 'AND A.Data_Src_Cd = '||SUBSTRING_INDEX(UPPER(ETL_DATA_GROUP_CURRENT),'_','1') INTO ETL_OD_Q_COND;
		END IF;
        
		IF ETL_T_TAB_TYPE IN ('q','n') THEN
					
			SET @EXEC_OD_SQL = 
			CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_OD,' \n'
			,'(\n'
			,ETL_ALL_COLS_DIFF,',\n'
			,'Start_Dt,\nEnd_Dt\n)\n'
			,'SELECT \n',ETL_ALL_COLS_DIFF_A,',\n'
			,'A.Start_Dt,\n${MAX_DATE}\nFROM '
			,ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME,' A \n'
			,'WHERE A.Start_Dt <= ${TX_DATE} \nAND A.End_Dt >= ${TX_DATE}\n'
			,ETL_OD_Q_COND);
		ELSE
			SET @EXEC_OD_SQL = 
			CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_OD,' \n'
			,'(\n'
			,ETL_ALL_COLS_DIFF,',\n'
			,'Start_Dt,\nEnd_Dt\n)\n'
			,'SELECT \n',ETL_ALL_COLS_DIFF_A,',\n'
			,'A.Start_Dt,\n${MAX_DATE}\nFROM '
			,ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME,' A \n'
			,'WHERE A.Start_Dt <= ${TX_DATE} \nAND A.End_Dt >= ${TX_DATE}\n'
			,ETL_OD_Q_COND
			,'\nAND (',ETL_PRI_KEY,') IN \n(\n  SELECT ',ETL_PRI_KEY,'\n  FROM ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_VT,'\n)');
		END IF;
		
		SET ETL_STEP_NO = CAST(CONCAT(ETL_DATA_GROUP_CURR_NUM,'9001') AS INT);
		CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,ETL_STEP_NO,@EXEC_OD_SQL,ETL_TX_DATE);
		IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
		
		/*比对I*/
		/*
		SET @EXEC_WT_I_SQL = CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_WT_I,' \n','SELECT '
		,ETL_ALL_COLS_DIFF,',\n${TX_DATE},\n${MAX_DATE}\nFROM ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_VT,'\nMINUS \n'
		,'SELECT ',ETL_ALL_COLS_DIFF,',\n${TX_DATE},\n${MAX_DATE}\nFROM ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_OD);
		SET ETL_STEP_NO = CAST(CONCAT(ETL_DATA_GROUP_CURR_NUM,'9002') AS INT);
		CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,ETL_STEP_NO,@EXEC_WT_I_SQL,ETL_TX_DATE);
		IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
		*/
		/*比对I*/ -- modify LJZ on 20230616
		SET @EXEC_WT_I_SQL = CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_WT_I,' \n','(\n',ETL_ALL_COLS_DIFF,',\nstart_dt,end_dt)\n','SELECT '
		,ETL_ALL_COLS_DIFF,',\n${TX_DATE},\n${MAX_DATE}\nFROM ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_VT,'\nMINUS \n'
		,'SELECT ',ETL_ALL_COLS_DIFF,',\n${TX_DATE},\n${MAX_DATE}\nFROM ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_OD);
		SET ETL_STEP_NO = CAST(CONCAT(ETL_DATA_GROUP_CURR_NUM,'9002') AS INT);
		CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,ETL_STEP_NO,@EXEC_WT_I_SQL,ETL_TX_DATE);
		IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
		
		/*比对U*/
		/*
		SET @EXEC_WT_U_SQL = CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_WT_U,' \n','SELECT '
		,ETL_ALL_COLS_DIFF,',\n${MAX_DATE},\n${MAX_DATE}\nFROM ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_OD,'\nMINUS \n'
		,'SELECT ',ETL_ALL_COLS_DIFF,',\n${MAX_DATE},\n${MAX_DATE}\nFROM ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_VT);
		*/
		/*比对U*/ -- modify LJZ on 20230616
		SET @EXEC_WT_U_SQL = CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_WT_U,' \n','(\n',ETL_ALL_COLS_DIFF,',\nstart_dt,end_dt)\n','SELECT '
		,ETL_ALL_COLS_DIFF,',\n${MAX_DATE},\n${MAX_DATE}\nFROM ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_OD,'\nMINUS \n'
		,'SELECT ',ETL_ALL_COLS_DIFF,',\n${MAX_DATE},\n${MAX_DATE}\nFROM ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_VT);
		
		SET ETL_STEP_NO = CAST(CONCAT(ETL_DATA_GROUP_CURR_NUM,'9003') AS INT);
		CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,ETL_STEP_NO,@EXEC_WT_U_SQL,ETL_TX_DATE);
		IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
				
		/*清空VT表*/
		SET ETL_STEP_NO = CAST(CONCAT(ETL_DATA_GROUP_CURR_NUM,'9004') AS INT);
		SET @TRUN_VT_SQL = CONCAT('TRUNCATE TABLE ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_VT);
		  CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,ETL_STEP_NO,@TRUN_VT_SQL,ETL_TX_DATE);
		  IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
		
		/*清空OD表*/
		SET ETL_STEP_NO = CAST(CONCAT(ETL_DATA_GROUP_CURR_NUM,'9005') AS INT);
		SET @TRUN_OD_SQL = CONCAT('TRUNCATE TABLE ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_OD);
		  CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,ETL_STEP_NO,@TRUN_OD_SQL,ETL_TX_DATE);
		  IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
		
		DELETE FROM VT_DATA_GROUP WHERE GROUP_MEMBER = ETL_DATA_GROUP_CURRENT;
		SELECT COUNT(*) INTO ETL_DATA_GROUP_COUNT FROM VT_DATA_GROUP;
		SELECT ETL_DATA_GROUP_CURR_NUM + 1 INTO ETL_DATA_GROUP_CURR_NUM;
	END WHILE;
	
	DROP TABLE IF EXISTS VT_DATA_GROUP;
	
	/*
	SET @EXEC_UP_SQL = CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME,'\nSELECT ',ETL_ALL_COLS_DIFFF,',\n${LAST_TX_DATE} \nFROM ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME,' A \nWHERE (',ETL_PRI_KEY,') IN \n(\n  SELECT ',ETL_PRI_KEY,' \n  FROM ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_WT_U,'\n) \nAND A.Start_Dt <= ${TX_DATE} \nAND A.End_Dt >= ${TX_DATE}');
	*/
	-- modify by LJZ on 20230616
	SET @EXEC_UP_SQL = CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME,'(\n',ETL_ALL_COLS_DIFFF,',\nend_dt)\n','\nSELECT ',ETL_ALL_COLS_DIFFF,',\n${LAST_TX_DATE} \nFROM ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME,' A \nWHERE (',ETL_PRI_KEY,') IN \n(\n  SELECT ',ETL_PRI_KEY,' \n  FROM ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_WT_U,'\n) \nAND A.Start_Dt <= ${TX_DATE} \nAND A.End_Dt >= ${TX_DATE}');
	CALL ETL_TEST.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,3000001,@EXEC_UP_SQL,ETL_TX_DATE);
	CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,3000001,@EXEC_UP_SQL,ETL_TX_DATE);
	IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
		
	SET @EXEC_UP_SQL = CONCAT('DELETE FROM ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME,' A WHERE (',ETL_PRI_KEY,') IN \n(\n  SELECT ',ETL_PRI_KEY,' \n FROM ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_WT_U,'\n) \nAND A.Start_Dt <= ${TX_DATE} \nAND A.End_Dt >= ${TX_DATE}');
	CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,3000002,@EXEC_UP_SQL,ETL_TX_DATE);
	IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
		
	SET @EXCE_INSERT_SQL = CONCAT('INSERT INTO ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME,'\nSELECT * FROM ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_WT_I);	
	CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,3000003,@EXCE_INSERT_SQL,ETL_TX_DATE);
	IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
	
	
	SET @DROP_VT_SQL = CONCAT('DROP ',ETL_TEMPORARY,' TABLE IF EXISTS ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_VT);
	CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,4000001,@DROP_VT_SQL,ETL_TX_DATE);
	IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;

	SET @DROP_OD_SQL = CONCAT('DROP ',ETL_TEMPORARY,' TABLE IF EXISTS ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_OD);
	CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,4000002,@DROP_OD_SQL,ETL_TX_DATE);
	IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
	
	SET @DROP_WT_I_SQL = CONCAT('DROP ',ETL_TEMPORARY,' TABLE IF EXISTS ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_WT_I);
	CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,4000003,@DROP_WT_I_SQL,ETL_TX_DATE);
	IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;

	SET @DROP_WT_U_SQL = CONCAT('DROP ',ETL_TEMPORARY,' TABLE IF EXISTS ',ETL_SCHEMA_NAME,'.',ETL_T_TAB_ENG_NAME_WT_U);
	CALL ETL.PR_EXEC_SQL(@RTC,'',ETL_T_TAB_ENG_NAME,4000004,@DROP_WT_U_SQL,ETL_TX_DATE);
	IF @RTC <> 0 THEN SET OUT_RES_MSG = '12';LEAVE LABLE;END IF;
	

END IF;
	
	SELECT '0' INTO OUT_RES_MSG;
END |